{
	"include": ["src"],
	"exclude": [
		"node_modules",
		"public",
		"dist"
	], // *** 不进行类型检查的文件 ***
	"compilerOptions": {
		/* Visit https://aka.ms/tsconfig to read more about this file */
		"rootDir": "./src",//源码目录
		"module": "commonjs",
		"outDir": "./dist",
		/* 指定要包含在编译中的库文件——引用类库——即申明文件，如果输出的模块方式是 es5，就会默认引入 "dom","es5","scripthost" 。如果在 TS 中想要使用一些 ES6 以上版本的语法，就需要引入相关的类库 */
		"lib": [
			"webworker",
			"dom",
			"es5",
			"es2015",
			"es2016",
			"es2015.promise",
			"dom.iterable",
			"scripthost",
			"esnext",
		], // 要包含在编译中的依赖库文件列表
		"allowJs": true, // 允许编译 JavaScript 文件
		"checkJs": true,
		"allowSyntheticDefaultImports": true, // 允许从没有默认导出的模块进行默认导入
		"resolveJsonModule": true, // 允许使用 .json 扩展名导入的模块
		"jsx": "react", // 在.tsx文件中支持JSX
		// "sourceMap": true, // 生成相应的.map文件
		// "declaration": true, // 生成相应的.d.ts文件
		"allowUmdGlobalAccess": true,
		"experimentalDecorators": true, // 启用对ES装饰器的实验性支持
		"moduleResolution": "node", // 将模块解析模式设置为node.js解析模式
		"baseUrl": "./",
		"incremental": true, // 通过从以前的编译中读取/写入信息到磁盘上的文件来启用增量编译
		/* 当目标是ES5或ES3的时候提供对for-of、扩展运算符和解构赋值中对于迭代器的完整支持 */
		"downlevelIteration": true,
		"noUnusedLocals": true,
		"noUnusedParameters": true,
		"noImplicitReturns": true,
		"noFallthroughCasesInSwitch": true,
		// 不允许使用隐式的 any 类型
		"noImplicitAny": false,
		// 不允许 this 有隐式的 any 类型，即 this 必须有明确的指向
		"noImplicitThis": false,
		// 不允许把 null、undefined 赋值给其他类型变量
		"strictNullChecks": false,
		"paths": {
			//别名
			"@/*": [
				"src/*"
			],
			"@images/*": [
				"src/assets/images/*"
			],
		},
		/* Language and Environment */
		"target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */

		/* Interop Constraints */
		"esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
		"forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

		/* Type Checking */
		"strict": true,                                      /* Enable all strict type-checking options. */
		"skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
	}
}
